<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Salted fish Z</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-05-29T14:19:43.071Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Zr</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Vue-Boot介绍文档</title>
    <link href="http://yoursite.com/2018/05/29/Vue-Boot%E4%BB%8B%E7%BB%8D%E6%96%87%E6%A1%A3/"/>
    <id>http://yoursite.com/2018/05/29/Vue-Boot介绍文档/</id>
    <published>2018-05-29T14:07:10.351Z</published>
    <updated>2018-05-29T14:19:43.071Z</updated>
    
    <content type="html"><![CDATA[<p>vue-boot采用目前主流的前后端分离架构</p><h3 id="技术选型"><a href="#技术选型" class="headerlink" title="技术选型"></a>技术选型</h3><p>后端</p><ul><li>Spring Boot 2.0.1.RELEASE</li><li>SpringMVC</li><li>Spring Security</li><li>Spring Data JPA</li><li>MyBatis-Plus</li><li>Redis</li><li>Elasticsearch：基于Lucene分布式搜索引擎</li><li>Druid：阿里高性能数据库连接池</li><li>Json Web Token(JWT)：API鉴权</li><li>Hutool：Java工具包</li><li>Jasypt：配置文件加密</li><li>Swagger2：Api文档生成</li><li>MySQL</li><li>Maven</li><li>第三方SDK<ul><li>七牛云文件存储服务</li></ul></li><li>其它开发工具<ul><li>Lombok</li><li>阿里JAVA开发规约插件</li></ul></li></ul><p>前端</p><ul><li>Vue 2.5.x</li><li>iview</li><li>iview-admin</li><li>iview-area</li><li>Vuex</li><li>Vue Router</li><li>ES6</li><li>webpack</li><li>axios</li><li>echarts</li><li>js-cookie</li></ul><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><p>后端</p><ul><li>安装依赖并启动：Redis、Elasticsearch，不安装影响日志功能</li><li>MySQL数据库新建 vueboot 数据库，数据库编码为UTF-8并导入sql</li><li>在IDEA中open导入项目并import changes</li><li>修改配置文件 application.yml 相应配置</li><li>修改mysql对应数据库及用户名密码，密码使用Jasypt加密,通过JasyptUtil 工具类生成加解密结果,加密结果放入ENC()括号内</li><li>启动运行 VueBootApplication.java 默认端口8888 </li><li>访问接口文档 <a href="http://localhost:8888/swagger-ui.html" target="_blank" rel="noopener">http://localhost:8888/swagger-ui.html</a></li></ul><p>前端</p><ul><li>安装node.js并装好npm,cnpm工具</li><li>config/index.js 中修改后端接口地址代理配置，默认8888</li><li>在项目根文件夹下先后执行命令 npm install 、 npm run dev</li><li>前台端口默认9999 <a href="http://localhost:9999" target="_blank" rel="noopener">http://localhost:9999</a></li></ul><h3 id="项目结构说明"><a href="#项目结构说明" class="headerlink" title="项目结构说明"></a>项目结构说明</h3><p>后端</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">├── src</span><br><span class="line">│   ├── main</span><br><span class="line">│   │   ├── java</span><br><span class="line">│   │   │   └── com</span><br><span class="line">│   │   │       └── scnu</span><br><span class="line">│   │   │           └── vueboot</span><br><span class="line">│   │   │               ├── base               基类封装</span><br><span class="line">│   │   │               ├── common</span><br><span class="line">│   │   │               │   ├── annotation     注解</span><br><span class="line">│   │   │               │   ├── aop            切面</span><br><span class="line">│   │   │               │   ├── constants      全局常量</span><br><span class="line">│   │   │               │   ├── utils          工具类</span><br><span class="line">│   │   │               │   └── vo             视图对象</span><br><span class="line">│   │   │               ├── config</span><br><span class="line">│   │   │               │   ├── interceptor    拦截器配置</span><br><span class="line">│   │   │               │   ├── mybatisplus    mybatis配置</span><br><span class="line">│   │   │               │   ├── redis          redis配置</span><br><span class="line">│   │   │               │   ├── sercurity      recurity配置</span><br><span class="line">│   │   │               │   └── swagger        swaagger配置</span><br><span class="line">│   │   │               ├── controller         控制器</span><br><span class="line">│   │   │               │   ├── admin</span><br><span class="line">│   │   │               │   └── common</span><br><span class="line">│   │   │               ├── dao                数据访问类</span><br><span class="line">│   │   │               │   ├── elasticsearch</span><br><span class="line">│   │   │               │   └── mapper</span><br><span class="line">│   │   │               ├── entity             实体类</span><br><span class="line">│   │   │               │   └── elasticsearch</span><br><span class="line">│   │   │               ├── exception          自定义异常</span><br><span class="line">│   │   │               ├── service            服务接口</span><br><span class="line">│   │   │               │   ├── elasticsearch</span><br><span class="line">│   │   │               │   └── mybatis</span><br><span class="line">│   │   │               └── serviceImpl        服务接口实现类</span><br><span class="line">│   │   │                   ├── elasticsearch</span><br><span class="line">│   │   │                   └── mybatis</span><br><span class="line">│   │   └── resources</span><br><span class="line">│   │       └── mapper                  mybatis映射文件</span><br><span class="line">│   │       └── application.yml                spring全局配置文件</span><br><span class="line">│   └── test</span><br><span class="line">│       └── java</span><br><span class="line">│           └── com</span><br><span class="line">│               └── scnu</span><br><span class="line">│                   └── vueboot</span><br><span class="line">│                       └── service</span><br><span class="line">├── pom.xml                                    maven项目配置</span><br></pre></td></tr></table></figure><p>前端</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">├── src</span><br><span class="line">│   ├── images    </span><br><span class="line">│   ├── locale                i18n国际化配置</span><br><span class="line">│   ├── router                路由配置</span><br><span class="line">│   ├── store                 vuex</span><br><span class="line">│   │   └── modules</span><br><span class="line">│   ├── styles                全局样式</span><br><span class="line">│   │   └── fonts</span><br><span class="line">│   ├── utils                 工具</span><br><span class="line">│   └── views                 视图</span><br><span class="line">│       ├── access</span><br><span class="line">│       ├── change-pass</span><br><span class="line">│       ├── error-page</span><br><span class="line">│       ├── home</span><br><span class="line">│       │   ├── components</span><br><span class="line">│       │   │   └── styles</span><br><span class="line">│       │   └── map-data</span><br><span class="line">│       ├── main-components</span><br><span class="line">│       │   ├── lockscreen</span><br><span class="line">│       │   │   ├── components</span><br><span class="line">│       │   │   └── styles</span><br><span class="line">│       │   └── shrinkable-menu</span><br><span class="line">│       │       ├── components</span><br><span class="line">│       │       └── styles</span><br><span class="line">│       ├── message</span><br><span class="line">│       ├── my-components</span><br><span class="line">│       │   └── scroll-bar</span><br><span class="line">│       │       └── vue-scroller-bars</span><br><span class="line">│       ├── own-space</span><br><span class="line">│       └── sys</span><br><span class="line">│           ├── log-manage</span><br><span class="line">│           ├── menu-manage</span><br><span class="line">│           ├── role-manage</span><br><span class="line">│           └── user-manage</span><br><span class="line">└── static                    静态文件</span><br></pre></td></tr></table></figure><h3 id="开发介绍"><a href="#开发介绍" class="headerlink" title="开发介绍"></a>开发介绍</h3><p>后端开发（CRUD）</p><h4 id="1-Entity开发"><a href="#1-Entity开发" class="headerlink" title="1. Entity开发"></a>1. Entity开发</h4><p>User.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span>  <span class="comment">//Lombok 注解在类上, 为类提供读写属性, 此外还提供了 equals()、hashCode()、toString() 方法</span></span><br><span class="line"><span class="meta">@Entity</span> <span class="comment">//JPA中指名这是一个实体Bean，@Table注释指定了Entity所要映射带数据库表</span></span><br><span class="line"><span class="meta">@Table</span>(name = <span class="string">"t_user"</span>) <span class="comment">//JPA中映射数据库表名</span></span><br><span class="line"><span class="meta">@TableName</span>(<span class="string">"t_user"</span>)    <span class="comment">//Mybatis中映射数据库表名</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">extends</span> <span class="title">BaseEntity</span></span>&#123;</span><br><span class="line">  <span class="comment">//继承基类属性</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">// swagger中用在出入参数对象的字段上 协议集描述</span></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"用户名"</span>)</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"密码"</span>)</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 采用驼峰命名映射 数据库中对应字段为 'nick_name'</span></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"昵称"</span>)</span><br><span class="line">    <span class="keyword">private</span> String nickName;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"手机"</span>)</span><br><span class="line">    <span class="keyword">private</span> String mobile;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"邮件"</span>)</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"地址"</span>)</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"0女 1男 2保密"</span>)</span><br><span class="line">    <span class="meta">@Column</span>(length=<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">private</span> Integer sex;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"用户头像"</span>)</span><br><span class="line">    <span class="meta">@Column</span>(length=<span class="number">1000</span>)</span><br><span class="line">    <span class="keyword">private</span> String avatar = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"用户类型 0普通用户 1管理员"</span>)</span><br><span class="line">    <span class="keyword">private</span> Integer type = CommonConstant.USER_TYPE_NORMAL;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"状态 默认0正常 -1拉黑"</span>)</span><br><span class="line">    <span class="keyword">private</span> Integer status = CommonConstant.USER_STATUS_NORMAL;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"描述/详情/备注"</span>)</span><br><span class="line">    <span class="keyword">private</span> String description;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// @Transient JPA中不参与数据库字段映射</span></span><br><span class="line">  <span class="comment">// @TableField(exist=false) Mybatis中不参与数据库字段映射</span></span><br><span class="line">    <span class="meta">@Transient</span></span><br><span class="line">    <span class="meta">@TableField</span>(exist=<span class="keyword">false</span>)</span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"用户拥有角色"</span>)</span><br><span class="line">    <span class="keyword">private</span> List&lt;Role&gt; roles;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-Dao开发"><a href="#2-Dao开发" class="headerlink" title="2. Dao开发"></a>2. Dao开发</h4><p>JPA的方式继承了JpaRepository接口，所以可以根据方法名来自动生成SQL。例如findByUserName、countByUserName，多表查询需要写sql建议采用mybatis方式开发。</p><p>UserDao.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> <span class="keyword">extends</span> <span class="title">BaseDao</span>&lt;<span class="title">User</span>,<span class="title">String</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通过用户名和状态获取用户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> username</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> status</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">findByUsernameAndStatus</span><span class="params">(String username, Integer status)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通过状态和类型获取用户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> status</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> type</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">findByStatusAndType</span><span class="params">(Integer status, Integer type)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Mybatis方式开发分为两部分，一部分为dao/mapper中mapper接口的定义，另一部分为resource/mapper/*.xml中映射文件的开发，sql编写主要在这里。<br>UserRoleMapper.java</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// 继承了BaseMapper&lt;T&gt; 已经有常用的增删改查接口</span><br><span class="line">public interface UserRoleMapper extends BaseMapper&lt;UserRole&gt; &#123;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 通过用户id获取</span><br><span class="line">     * @param userId</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    List&lt;Role&gt; findByUserId(@Param(&quot;userId&quot;) String userId);</span><br><span class="line">    // @Param 给参数命名,参数命名后就能根据名字得到参数值,正确的将参数传入sql语句中</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>UserRoleMapper.xml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE mapper PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot; &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;</span><br><span class="line">// namespace用于绑定Dao接口的</span><br><span class="line">&lt;mapper namespace=&quot;com.scnu.vueboot.dao.mapper.UserRoleMapper&quot;&gt;</span><br><span class="line"> </span><br><span class="line"> // id对应接口名，resultType对应返回类型，sql采用原生sql非Hql，字段为数据库中的字段而非实体中的字段</span><br><span class="line">    &lt;select id=&quot;findByUserId&quot; resultType=&quot;com.scnu.vueboot.entity.Role&quot;&gt;</span><br><span class="line">      select r.id id ,name, access</span><br><span class="line">      from t_user_role ur</span><br><span class="line">      LEFT JOIN t_role r</span><br><span class="line">      ON ur.role_id = r.id</span><br><span class="line">      WHERE user_Id = #&#123;userId&#125;</span><br><span class="line">    &lt;/select&gt;</span><br><span class="line">    // 通过#&#123;&#125;来引用参数命名</span><br><span class="line">&lt;/mapper&gt;</span><br></pre></td></tr></table></figure><h4 id="3-Service开发"><a href="#3-Service开发" class="headerlink" title="3. Service开发"></a>3. Service开发</h4><p>UserRoleService.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@CacheConfig</span>(cacheNames = <span class="string">"userRole"</span>) <span class="comment">//针对类配置，下属@Cacheable name均为userRole</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserRoleService</span> <span class="keyword">extends</span> <span class="title">BaseService</span>&lt;<span class="title">UserRole</span>,<span class="title">String</span>&gt; </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通过roleId查找</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> roleId</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Cacheable</span>(key = <span class="string">"#roleId"</span>) <span class="comment">//声明方法是可缓存的。将结果存储到缓存中以便后续使用相同参数调用时不需执行实际的方法。直接从缓存中取值</span></span><br><span class="line">    <span class="function">List&lt;UserRole&gt; <span class="title">findByRoleId</span><span class="params">(String roleId)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除用户角色</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userId</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">deleteByUserId</span><span class="params">(String userId)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>UserRoleServiceImpl</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">@Slf4j    //注解实现日志输出，不用写都private final Logger logger = LoggerFactory.getLogger(UserRoleServiceImpl.class); 直接用log.debug(&apos;&apos;);</span><br><span class="line">@Service   //用于标注业务层组件</span><br><span class="line">@Transactional  //事务管理</span><br><span class="line">public class UserRoleServiceImpl implements UserRoleService &#123;</span><br><span class="line">    </span><br><span class="line">  </span><br><span class="line">    @Autowired  //实现自动装配，spring可以自动帮你把bean里面引用的对象的setter/getter方法省略，它会自动帮你set/get</span><br><span class="line">    private UserRoleDao userRoleDao;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public UserRoleDao getRepository() &#123;</span><br><span class="line">        return userRoleDao;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public List&lt;UserRole&gt; findByRoleId(String roleId) &#123;</span><br><span class="line">        return userRoleDao.findByRoleId(roleId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void deleteByUserId(String userId) &#123;</span><br><span class="line">        userRoleDao.deleteByUserId(userId);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-Controller开发"><a href="#4-Controller开发" class="headerlink" title="4. Controller开发"></a>4. Controller开发</h4><p>MenuController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="meta">@RestController</span>                   <span class="comment">// Rest接口</span></span><br><span class="line"><span class="meta">@Api</span>(description = <span class="string">"菜单管理接口"</span>)  <span class="comment">//Swagger接口声明</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/menu"</span>)          <span class="comment">// 路由映射</span></span><br><span class="line"><span class="meta">@CacheConfig</span>(cacheNames = <span class="string">"menu"</span>) </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MenuController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> MenuService menuService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/getAllList"</span>,method = RequestMethod.GET)</span><br><span class="line">    <span class="meta">@ApiOperation</span>(value = <span class="string">"获取数据"</span>)</span><br><span class="line">    <span class="meta">@SystemLog</span>(description=<span class="string">"获取菜单数据"</span>)  <span class="comment">//通过日志注解 记录操作日志</span></span><br><span class="line">    <span class="meta">@Cacheable</span>(key = <span class="string">"'list'"</span>)</span><br><span class="line">    <span class="keyword">public</span> Result&lt;List&lt;Menu&gt;&gt; getAllList()&#123;</span><br><span class="line"></span><br><span class="line">        List&lt;Menu&gt; list = menuService.findByParent(<span class="keyword">true</span>);</span><br><span class="line">        <span class="keyword">for</span>(Menu menu : list)&#123;</span><br><span class="line">            List&lt;Menu&gt; children = menuService.findByParentId(menu.getId());</span><br><span class="line">            menu.setChildren(children);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ResultUtil&lt;List&lt;Menu&gt;&gt;().setData(list);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PreAuthorize</span>(<span class="string">"hasRole('ADMIN')"</span>)  <span class="comment">//进入方法前的权限验证</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/add"</span>,method = RequestMethod.POST)</span><br><span class="line">    <span class="meta">@ApiOperation</span>(value = <span class="string">"添加"</span>)</span><br><span class="line">    <span class="meta">@CacheEvict</span>(key = <span class="string">"'list'"</span>)   <span class="comment">// @CachEvict用于清空缓存</span></span><br><span class="line">    <span class="meta">@SystemLog</span>(description=<span class="string">"添加菜单"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result&lt;Menu&gt; <span class="title">add</span><span class="params">(@ModelAttribute Menu menu)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        Menu u = menuService.save(menu);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ResultUtil&lt;Menu&gt;().setData(u);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PreAuthorize</span>(<span class="string">"hasRole('ADMIN')"</span>)</span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/edit"</span>,method = RequestMethod.POST)</span><br><span class="line">    <span class="meta">@ApiOperation</span>(value = <span class="string">"编辑"</span>)</span><br><span class="line">    <span class="meta">@CacheEvict</span>(key = <span class="string">"'list'"</span>)</span><br><span class="line">    <span class="meta">@SystemLog</span>(description=<span class="string">"编辑菜单"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result&lt;Menu&gt; <span class="title">edit</span><span class="params">(@ModelAttribute Menu menu)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        Menu u = menuService.update(menu);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ResultUtil&lt;Menu&gt;().setData(u);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PreAuthorize</span>(<span class="string">"hasRole('ADMIN')"</span>)</span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/delByIds"</span>,method = RequestMethod.DELETE)</span><br><span class="line">    <span class="meta">@ApiOperation</span>(value = <span class="string">"批量通过id删除"</span>)</span><br><span class="line">    <span class="meta">@CacheEvict</span>(key = <span class="string">"'list'"</span>)</span><br><span class="line">    <span class="meta">@SystemLog</span>(description=<span class="string">"批量删除菜单"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result&lt;Object&gt; <span class="title">delByIds</span><span class="params">(@RequestParam String[] ids)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(String id:ids)&#123;</span><br><span class="line">            menuService.delete(id);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ResultUtil&lt;Object&gt;().setSuccessMsg(<span class="string">"批量通过id删除数据成功"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="技术文档合集"><a href="#技术文档合集" class="headerlink" title="技术文档合集"></a>技术文档合集</h3><p><a href="http://otcfhtx6u.bkt.clouddn.com/%E9%98%BF%E9%87%8C%E5%B7%B4%E5%B7%B4Java%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C%E7%BB%88%E6%9E%81%E7%89%88v1.3.0.pdf" target="_blank" rel="noopener">阿里Java开发手册</a></p><p><a href="https://cn.vuejs.org/v2/guide/" target="_blank" rel="noopener">Vue官方教程文档</a></p><p><a href="https://cn.vuejs.org/v2/api/" target="_blank" rel="noopener">Vue官方API文档</a></p><p><a href="https://router.vuejs.org/zh-cn/" target="_blank" rel="noopener">Vue router</a></p><p><a href="https://vuex.vuejs.org/zh-cn/" target="_blank" rel="noopener">Vuex</a></p><p><a href="https://qbgbook.gitbooks.io/spring-boot-reference-guide-zh/content/" target="_blank" rel="noopener">Spring Boot参考指南</a></p><p><a href="https://docshome.gitbooks.io/springboot/content/" target="_blank" rel="noopener">Spring Boot 2.0.1 中文文档</a></p><p><a href="http://es6.ruanyifeng.com" target="_blank" rel="noopener">ECMAScript 6 入门</a></p><p><a href="https://www.iviewui.com" target="_blank" rel="noopener">iview UI库</a></p><p><a href="https://github.com/iview/iview-admin" target="_blank" rel="noopener">iview admin</a></p><p><a href="https://www.jianshu.com/p/6307c89fe3fa" target="_blank" rel="noopener">jwt + spring security 介绍</a></p><p><a href="https://github.com/alibaba/p3c/blob/master/idea-plugin/README_cn.md" target="_blank" rel="noopener">阿里JAVA开发规约插件</a></p><p><a href="http://idea.lanyus.com" target="_blank" rel="noopener">IDEA注册码</a></p><p><a href="https://www.jianshu.com/p/365ea41b3573" target="_blank" rel="noopener">Lombok 安装与介绍</a></p><p><a href="https://blog.csdn.net/u010620152/article/details/56008359" target="_blank" rel="noopener">node.js cnpm 安装</a></p><p><a href="http://www.mybatis.org/mybatis-3/zh/index.html" target="_blank" rel="noopener">Mybatis 中文文档</a></p><p><a href="https://legacy.gitbook.com/book/ityouknow/spring-data-jpa-reference-documentation/details" target="_blank" rel="noopener">Spring Data JPA 参考指南</a></p><p><a href="https://www.jianshu.com/p/ac4c00a63750" target="_blank" rel="noopener">Spring Boot 热加载、容器和多项目</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;vue-boot采用目前主流的前后端分离架构&lt;/p&gt;
&lt;h3 id=&quot;技术选型&quot;&gt;&lt;a href=&quot;#技术选型&quot; class=&quot;headerlink&quot; title=&quot;技术选型&quot;&gt;&lt;/a&gt;技术选型&lt;/h3&gt;&lt;p&gt;后端&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Spring Boot 2.0.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2018/05/29/hello-world/"/>
    <id>http://yoursite.com/2018/05/29/hello-world/</id>
    <published>2018-05-29T13:06:48.404Z</published>
    <updated>2018-05-29T13:06:48.404Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
